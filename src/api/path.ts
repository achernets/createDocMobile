import * as fs from 'fs';
import * as path from 'path';

function processFile(filePath: string) {
  let content = fs.readFileSync(filePath, 'utf-8');

  // 1. –ó–∞–º—ñ–Ω—é—î–º–æ —Ç–∏–ø–∏ Int64 -> number
  content = content.replace(/\bInt64\b/g, 'number');

  // 2. –ó–∞–º—ñ–Ω—é—î–º–æ –≤–∏–∫–ª–∏–∫–∏ .readI64() -> .readI64().toNumber()
  content = content.replace(
    /(\w+)\.readI64\(\)/g,
    '($1.readI64() as any).toNumber()'
  );

  // 3. –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —ñ–º–ø–æ—Ä—Ç Int64, —è–∫—â–æ –≤—ñ–Ω –±—ñ–ª—å—à–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è
  content = content.replace(
    /import\s+\{\s*Int64\s*\}\s+from\s+["']int64-buffer["'];?\n?/,
    ''
  );

  fs.writeFileSync(filePath, content, 'utf-8');
}

function processDirectory(dirPath: string) {
  const files = fs.readdirSync(dirPath);
  for (const file of files) {
    const fullPath = path.join(dirPath, file);
    const stat = fs.statSync(fullPath);

    if (stat.isDirectory()) {
      processDirectory(fullPath);
    } else if (file.endsWith('.ts')) {
      processFile(fullPath);
    }
  }
}

// üîß –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
const generatedPath = path.resolve('./data'); // –∞–±–æ ./gen-ts
processDirectory(generatedPath);
console.log('‚úÖ i64 patched to number in Thrift files');