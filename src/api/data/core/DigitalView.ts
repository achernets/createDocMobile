/* tslint:disable */
/* eslint-disable */
/*
 * Autogenerated by @creditkarma/thrift-typescript v3.7.6
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
*/
import Int64 from "node-int64";
import * as thrift from "thrift";
export interface IDigitalViewArgs {
    id?: string;
    createDate?: number | Int64;
    creatorId?: string;
    documentPattern?: string;
    oName?: string;
    context?: string;
}
export class DigitalView {
    public id?: string;
    public createDate?: Int64;
    public creatorId?: string;
    public documentPattern?: string;
    public oName?: string;
    public context?: string;
    constructor(args?: IDigitalViewArgs) {
        if (args != null && args.id != null) {
            this.id = args.id;
        }
        if (args != null && args.createDate != null) {
            if (typeof args.createDate === "number") {
                this.createDate = new Int64(args.createDate);
            }
            else {
                this.createDate = args.createDate;
            }
        }
        if (args != null && args.creatorId != null) {
            this.creatorId = args.creatorId;
        }
        if (args != null && args.documentPattern != null) {
            this.documentPattern = args.documentPattern;
        }
        if (args != null && args.oName != null) {
            this.oName = args.oName;
        }
        if (args != null && args.context != null) {
            this.context = args.context;
        }
    }
    public write(output: thrift.TProtocol): void {
        output.writeStructBegin("DigitalView");
        if (this.id != null) {
            output.writeFieldBegin("id", thrift.Thrift.Type.STRING, 1);
            output.writeString(this.id);
            output.writeFieldEnd();
        }
        if (this.createDate != null) {
            output.writeFieldBegin("createDate", thrift.Thrift.Type.I64, 2);
            output.writeI64(this.createDate);
            output.writeFieldEnd();
        }
        if (this.creatorId != null) {
            output.writeFieldBegin("creatorId", thrift.Thrift.Type.STRING, 3);
            output.writeString(this.creatorId);
            output.writeFieldEnd();
        }
        if (this.documentPattern != null) {
            output.writeFieldBegin("documentPattern", thrift.Thrift.Type.STRING, 4);
            output.writeString(this.documentPattern);
            output.writeFieldEnd();
        }
        if (this.oName != null) {
            output.writeFieldBegin("oName", thrift.Thrift.Type.STRING, 5);
            output.writeString(this.oName);
            output.writeFieldEnd();
        }
        if (this.context != null) {
            output.writeFieldBegin("context", thrift.Thrift.Type.STRING, 6);
            output.writeString(this.context);
            output.writeFieldEnd();
        }
        output.writeFieldStop();
        output.writeStructEnd();
        return;
    }
    public static read(input: thrift.TProtocol): DigitalView {
        input.readStructBegin();
        let _args: any = {};
        while (true) {
            const ret: thrift.TField = input.readFieldBegin();
            const fieldType: thrift.Thrift.Type = ret.ftype;
            const fieldId: number = ret.fid;
            if (fieldType === thrift.Thrift.Type.STOP) {
                break;
            }
            switch (fieldId) {
                case 1:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_1: string = input.readString();
                        _args.id = value_1;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 2:
                    if (fieldType === thrift.Thrift.Type.I64) {
                        const value_2: Int64 = input.readI64();
                        _args.createDate = value_2;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 3:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_3: string = input.readString();
                        _args.creatorId = value_3;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 4:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_4: string = input.readString();
                        _args.documentPattern = value_4;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 5:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_5: string = input.readString();
                        _args.oName = value_5;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 6:
                    if (fieldType === thrift.Thrift.Type.STRING) {
                        const value_6: string = input.readString();
                        _args.context = value_6;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                default: {
                    input.skip(fieldType);
                }
            }
            input.readFieldEnd();
        }
        input.readStructEnd();
        return new DigitalView(_args);
    }
}
